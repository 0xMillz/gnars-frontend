// Generated by @wagmi/cli@0.1.11 on 3/15/2023 at 8:37:26â€¯AM
import {
  useContract,
  UseContractConfig,
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  Address,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
} from 'wagmi'
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult,
} from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GnarsV2AuctionHouse
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export const gnarsV2AuctionHouseABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousAdmin',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newAdmin',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AdminChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'gnarId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'timestamp',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AuctionBid',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'gnarId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'startTimestamp',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'endTimestamp',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'timestamp',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AuctionCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'gnarId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'endTime',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AuctionExtended',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'minBidIncrementPercentage',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AuctionMinBidIncrementPercentageUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'reservePrice',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AuctionReservePriceUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'gnarId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'winner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'timestamp',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AuctionSettled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'timeBuffer',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AuctionTimeBufferUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'beacon',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'BeaconUpgraded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'ogGnarId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'timestamp',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'OGGnarClaimed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Paused',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'skate',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      { name: 'dao', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'SkateDaoAddressesUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'account',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'Unpaused',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'SKATE_OG_ADDRESS',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'auction',
    outputs: [
      { name: 'gnarId', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'startTimestamp', internalType: 'uint256', type: 'uint256' },
      { name: 'endTimestamp', internalType: 'uint256', type: 'uint256' },
      { name: 'bidder', internalType: 'address payable', type: 'address' },
      { name: 'skatePercent', internalType: 'uint8', type: 'uint8' },
      { name: 'daoPercent', internalType: 'uint8', type: 'uint8' },
      { name: 'settled', internalType: 'bool', type: 'bool' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'auctionCounter',
    outputs: [{ name: '_value', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'baseAuctionTime',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ogGnarIds', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'claimGnars',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'gnarId', internalType: 'uint256', type: 'uint256' },
      { name: 'skatePercent', internalType: 'uint8', type: 'uint8' },
      { name: 'daoPercent', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'createBid',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'dao',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'gnars',
    outputs: [
      { name: '', internalType: 'contract ISkateContractV2', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'gnarsClaimedFor',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_skate', internalType: 'address', type: 'address' },
      { name: '_dao', internalType: 'address', type: 'address' },
      {
        name: '_gnars',
        internalType: 'contract ISkateContractV2',
        type: 'address',
      },
      { name: '_weth', internalType: 'address', type: 'address' },
      { name: '_reservePrice', internalType: 'uint256', type: 'uint256' },
      {
        name: '_minBidIncrementPercentage',
        internalType: 'uint8',
        type: 'uint8',
      },
      { name: '_baseAuctionTime', internalType: 'uint256', type: 'uint256' },
      { name: '_timeDoublingCount', internalType: 'uint256', type: 'uint256' },
      { name: '_timeBuffer', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minBidIncrementPercentage',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'pause',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'paused',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'remainingTime',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'reservePrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_minBidIncrementPercentage',
        internalType: 'uint8',
        type: 'uint8',
      },
    ],
    name: 'setMinBidIncrementPercentage',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_reservePrice', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setReservePrice',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_skate', internalType: 'address', type: 'address' },
      { name: '_dao', internalType: 'address', type: 'address' },
    ],
    name: 'setSkateDaoAddresses',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_timeBuffer', internalType: 'uint256', type: 'uint256' }],
    name: 'setTimeBuffer',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'settleAuction',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'settleCurrentAndCreateNewAuction',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'skate',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'timeBuffer',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'timeDoublingCount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'unpause',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'weth',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export const gnarsV2AuctionHouseAddress = {
  1: '0xC28e0d3c00296dD8c5C3F2E9707361920f92a209',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export const gnarsV2AuctionHouseConfig = {
  address: gnarsV2AuctionHouseAddress,
  abi: gnarsV2AuctionHouseABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GnarsOG
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export const gnarsOgABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_skate', internalType: 'address', type: 'address' },
      { name: '_dao', internalType: 'address', type: 'address' },
      { name: '_descriptor', internalType: 'address', type: 'address' },
      { name: '_seeder', internalType: 'address', type: 'address' },
      { name: '_reservePrice', internalType: 'uint256', type: 'uint256' },
      {
        name: '_minBidIncrementPercentage',
        internalType: 'uint8',
        type: 'uint8',
      },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'approved',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'gnarId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'sender',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'timestamp',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AuctionBid',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'gnarId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'AuctionCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'gnarId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'winner',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'amount',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'timestamp',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'AuctionSettled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'percent', internalType: 'uint8', type: 'uint8', indexed: false },
    ],
    name: 'MinBidIncrementPercentageUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'price',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'ReservePriceUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'auction',
    outputs: [
      { name: 'gnarId', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'startBlock', internalType: 'uint256', type: 'uint256' },
      { name: 'endBlock', internalType: 'uint256', type: 'uint256' },
      { name: 'bidder', internalType: 'address payable', type: 'address' },
      { name: 'skatePercent', internalType: 'uint8', type: 'uint8' },
      { name: 'daoPercent', internalType: 'uint8', type: 'uint8' },
      { name: 'settled', internalType: 'bool', type: 'bool' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'auctionPeriodBlocks',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'auctionStart',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'gnarId', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'gnarId', internalType: 'uint256', type: 'uint256' },
      { name: '_skatePercent', internalType: 'uint8', type: 'uint8' },
      { name: '_daoPercent', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'createBid',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'currentGnarId',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'dao',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'descriptor',
    outputs: [
      { name: '', internalType: 'contract IGnarDescriptor', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minBidIncrementPercentage',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'pause',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'paused',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'remainBlocks',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'reservePrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'seeder',
    outputs: [
      { name: '', internalType: 'contract IGnarSeeder', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'seeds',
    outputs: [
      { name: 'background', internalType: 'uint48', type: 'uint48' },
      { name: 'body', internalType: 'uint48', type: 'uint48' },
      { name: 'accessory', internalType: 'uint48', type: 'uint48' },
      { name: 'head', internalType: 'uint48', type: 'uint48' },
      { name: 'glasses', internalType: 'uint48', type: 'uint48' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_auctionPeriodBlocks', internalType: 'uint16', type: 'uint16' },
    ],
    name: 'setAuctionPeriodBlocks',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_descriptor', internalType: 'address', type: 'address' }],
    name: 'setDescriptor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_minBidIncrementPercentage',
        internalType: 'uint8',
        type: 'uint8',
      },
    ],
    name: 'setMinBidIncrementPercentage',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_reservePrice', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setReservePrice',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_seeder', internalType: 'address', type: 'address' }],
    name: 'setSeeder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_skate', internalType: 'address', type: 'address' },
      { name: '_dao', internalType: 'address', type: 'address' },
    ],
    name: 'setSkateDaoAddresses',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'settleCurrentAndCreateNewAuction',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'skate',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'unpause',
    outputs: [],
  },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export const gnarsOgAddress = {
  1: '0x494715B2a3C75DaDd24929835B658a1c19bd4552',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export const gnarsOgConfig = {
  address: gnarsOgAddress,
  abi: gnarsOgABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GnarsV2Token
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export const gnarsV2TokenABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_noundersDAO', internalType: 'address', type: 'address' },
      { name: '_minter', internalType: 'address', type: 'address' },
      {
        name: '_descriptor',
        internalType: 'contract IGnarDescriptorV2',
        type: 'address',
      },
      {
        name: '_seeder',
        internalType: 'contract IGnarSeederV2',
        type: 'address',
      },
      {
        name: '_proxyRegistry',
        internalType: 'contract IProxyRegistry',
        type: 'address',
      },
      { name: '_initialGnarId', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'approved',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'delegator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'fromDelegate',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'toDelegate',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'DelegateChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'delegate',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'previousBalance',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'newBalance',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'DelegateVotesChanged',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'DescriptorLocked' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'descriptor',
        internalType: 'contract IGnarDescriptorV2',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'DescriptorUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'GnarBurned',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
      {
        name: 'seed',
        internalType: 'struct IGnarSeederV2.Seed',
        type: 'tuple',
        components: [
          { name: 'background', internalType: 'uint48', type: 'uint48' },
          { name: 'body', internalType: 'uint48', type: 'uint48' },
          { name: 'accessory', internalType: 'uint48', type: 'uint48' },
          { name: 'head', internalType: 'uint48', type: 'uint48' },
          { name: 'glasses', internalType: 'uint48', type: 'uint48' },
        ],
        indexed: false,
      },
    ],
    name: 'GnarCreated',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'MinterLocked' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'minter',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'MinterUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'SeederLocked' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'seeder',
        internalType: 'contract IGnarSeederV2',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'SeederUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DELEGATION_TYPEHASH',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DOMAIN_TYPEHASH',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'gnarId', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint32', type: 'uint32' },
    ],
    name: 'checkpoints',
    outputs: [
      { name: 'fromBlock', internalType: 'uint32', type: 'uint32' },
      { name: 'votes', internalType: 'uint96', type: 'uint96' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'customDescription',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'delegatee', internalType: 'address', type: 'address' }],
    name: 'delegate',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'delegatee', internalType: 'address', type: 'address' },
      { name: 'nonce', internalType: 'uint256', type: 'uint256' },
      { name: 'expiry', internalType: 'uint256', type: 'uint256' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'delegateBySig',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'delegator', internalType: 'address', type: 'address' }],
    name: 'delegates',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'descriptor',
    outputs: [
      { name: '', internalType: 'contract IGnarDescriptorV2', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getCurrentVotes',
    outputs: [{ name: '', internalType: 'uint96', type: 'uint96' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getPriorVotes',
    outputs: [{ name: '', internalType: 'uint96', type: 'uint96' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialGnarId',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '_owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isDescriptorLocked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isMinterLocked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isSeederLocked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockDescriptor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockMinter',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'lockSeeder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'mint',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minter',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'nonces',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'noundersDAO',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'numCheckpoints',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'proxyRegistry',
    outputs: [
      { name: '', internalType: 'contract IProxyRegistry', type: 'address' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'seeder',
    outputs: [
      { name: '', internalType: 'contract IGnarSeederV2', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'seeds',
    outputs: [
      { name: 'background', internalType: 'uint48', type: 'uint48' },
      { name: 'body', internalType: 'uint48', type: 'uint48' },
      { name: 'accessory', internalType: 'uint48', type: 'uint48' },
      { name: 'head', internalType: 'uint48', type: 'uint48' },
      { name: 'glasses', internalType: 'uint48', type: 'uint48' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_description', internalType: 'string', type: 'string' },
    ],
    name: 'setCustomDescription',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_descriptor',
        internalType: 'contract IGnarDescriptorV2',
        type: 'address',
      },
    ],
    name: 'setDescriptor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_minter', internalType: 'address', type: 'address' }],
    name: 'setMinter',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: '_seeder',
        internalType: 'contract IGnarSeederV2',
        type: 'address',
      },
    ],
    name: 'setSeeder',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'viewDescription',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'delegator', internalType: 'address', type: 'address' }],
    name: 'votesToDelegate',
    outputs: [{ name: '', internalType: 'uint96', type: 'uint96' }],
  },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export const gnarsV2TokenAddress = {
  1: '0x558BFFF0D583416f7C4e380625c7865821b8E95C',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export const gnarsV2TokenConfig = {
  address: gnarsV2TokenAddress,
  abi: gnarsV2TokenABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouse(
  config: Omit<UseContractConfig, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsV2AuctionHouseAddress
  } = {} as any,
) {
  return useContract({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<
    typeof gnarsV2AuctionHouseABI,
    TFunctionName
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2AuctionHouseABI,
      TFunctionName,
      TSelectData
    >,
    'abi' | 'address'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2AuctionHouseABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"SKATE_OG_ADDRESS"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSkateOgAddress<
  TSelectData = ReadContractResult<
    typeof gnarsV2AuctionHouseABI,
    'SKATE_OG_ADDRESS'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2AuctionHouseABI,
      'SKATE_OG_ADDRESS',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'SKATE_OG_ADDRESS',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2AuctionHouseABI,
    'SKATE_OG_ADDRESS',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"auction"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuction<
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, 'auction'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2AuctionHouseABI,
      'auction',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'auction',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2AuctionHouseABI,
    'auction',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"auctionCounter"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuctionCounter<
  TSelectData = ReadContractResult<
    typeof gnarsV2AuctionHouseABI,
    'auctionCounter'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2AuctionHouseABI,
      'auctionCounter',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'auctionCounter',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2AuctionHouseABI,
    'auctionCounter',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"baseAuctionTime"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseBaseAuctionTime<
  TSelectData = ReadContractResult<
    typeof gnarsV2AuctionHouseABI,
    'baseAuctionTime'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2AuctionHouseABI,
      'baseAuctionTime',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'baseAuctionTime',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2AuctionHouseABI,
    'baseAuctionTime',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"dao"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseDao<
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, 'dao'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, 'dao', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'dao',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2AuctionHouseABI, 'dao', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"gnars"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseGnars<
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, 'gnars'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, 'gnars', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'gnars',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2AuctionHouseABI,
    'gnars',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"gnarsClaimedFor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseGnarsClaimedFor<
  TSelectData = ReadContractResult<
    typeof gnarsV2AuctionHouseABI,
    'gnarsClaimedFor'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2AuctionHouseABI,
      'gnarsClaimedFor',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'gnarsClaimedFor',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2AuctionHouseABI,
    'gnarsClaimedFor',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"minBidIncrementPercentage"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseMinBidIncrementPercentage<
  TSelectData = ReadContractResult<
    typeof gnarsV2AuctionHouseABI,
    'minBidIncrementPercentage'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2AuctionHouseABI,
      'minBidIncrementPercentage',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'minBidIncrementPercentage',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2AuctionHouseABI,
    'minBidIncrementPercentage',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseOwner<
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, 'owner'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, 'owner', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2AuctionHouseABI,
    'owner',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"paused"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHousePaused<
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, 'paused'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, 'paused', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'paused',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2AuctionHouseABI,
    'paused',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"remainingTime"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseRemainingTime<
  TSelectData = ReadContractResult<
    typeof gnarsV2AuctionHouseABI,
    'remainingTime'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2AuctionHouseABI,
      'remainingTime',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'remainingTime',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2AuctionHouseABI,
    'remainingTime',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"reservePrice"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseReservePrice<
  TSelectData = ReadContractResult<
    typeof gnarsV2AuctionHouseABI,
    'reservePrice'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2AuctionHouseABI,
      'reservePrice',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'reservePrice',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2AuctionHouseABI,
    'reservePrice',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"skate"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSkate<
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, 'skate'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, 'skate', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'skate',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2AuctionHouseABI,
    'skate',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"timeBuffer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseTimeBuffer<
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, 'timeBuffer'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2AuctionHouseABI,
      'timeBuffer',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'timeBuffer',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2AuctionHouseABI,
    'timeBuffer',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"timeDoublingCount"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseTimeDoublingCount<
  TSelectData = ReadContractResult<
    typeof gnarsV2AuctionHouseABI,
    'timeDoublingCount'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2AuctionHouseABI,
      'timeDoublingCount',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'timeDoublingCount',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2AuctionHouseABI,
    'timeDoublingCount',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"weth"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseWeth<
  TSelectData = ReadContractResult<typeof gnarsV2AuctionHouseABI, 'weth'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2AuctionHouseABI, 'weth', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'weth',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2AuctionHouseABI,
    'weth',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2AuctionHouseABI,
          string
        >['abi'],
        TFunctionName
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2AuctionHouseABI,
        TFunctionName
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2AuctionHouseABI, TFunctionName>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"claimGnars"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseClaimGnars<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2AuctionHouseABI,
          'claimGnars'
        >['abi'],
        'claimGnars'
      > & { address?: Address; chainId?: TChainId; functionName?: 'claimGnars' }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2AuctionHouseABI,
        'claimGnars'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'claimGnars'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2AuctionHouseABI, 'claimGnars'>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'claimGnars',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"createBid"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseCreateBid<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2AuctionHouseABI,
          'createBid'
        >['abi'],
        'createBid'
      > & { address?: Address; chainId?: TChainId; functionName?: 'createBid' }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2AuctionHouseABI,
        'createBid'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'createBid'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2AuctionHouseABI, 'createBid'>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'createBid',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseInitialize<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2AuctionHouseABI,
          'initialize'
        >['abi'],
        'initialize'
      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2AuctionHouseABI,
        'initialize'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2AuctionHouseABI, 'initialize'>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"pause"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHousePause<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2AuctionHouseABI,
          'pause'
        >['abi'],
        'pause'
      > & { address?: Address; chainId?: TChainId; functionName?: 'pause' }
    : UseContractWriteConfig<TMode, typeof gnarsV2AuctionHouseABI, 'pause'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'pause'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2AuctionHouseABI, 'pause'>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'pause',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseRenounceOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2AuctionHouseABI,
          'renounceOwnership'
        >['abi'],
        'renounceOwnership'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2AuctionHouseABI,
        'renounceOwnership'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof gnarsV2AuctionHouseABI,
    'renounceOwnership'
  >({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"setMinBidIncrementPercentage"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSetMinBidIncrementPercentage<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2AuctionHouseABI,
          'setMinBidIncrementPercentage'
        >['abi'],
        'setMinBidIncrementPercentage'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setMinBidIncrementPercentage'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2AuctionHouseABI,
        'setMinBidIncrementPercentage'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setMinBidIncrementPercentage'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof gnarsV2AuctionHouseABI,
    'setMinBidIncrementPercentage'
  >({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'setMinBidIncrementPercentage',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"setReservePrice"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSetReservePrice<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2AuctionHouseABI,
          'setReservePrice'
        >['abi'],
        'setReservePrice'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setReservePrice'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2AuctionHouseABI,
        'setReservePrice'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setReservePrice'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof gnarsV2AuctionHouseABI,
    'setReservePrice'
  >({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'setReservePrice',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"setSkateDaoAddresses"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSetSkateDaoAddresses<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2AuctionHouseABI,
          'setSkateDaoAddresses'
        >['abi'],
        'setSkateDaoAddresses'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setSkateDaoAddresses'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2AuctionHouseABI,
        'setSkateDaoAddresses'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSkateDaoAddresses'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof gnarsV2AuctionHouseABI,
    'setSkateDaoAddresses'
  >({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'setSkateDaoAddresses',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"setTimeBuffer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSetTimeBuffer<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2AuctionHouseABI,
          'setTimeBuffer'
        >['abi'],
        'setTimeBuffer'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setTimeBuffer'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2AuctionHouseABI,
        'setTimeBuffer'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setTimeBuffer'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof gnarsV2AuctionHouseABI,
    'setTimeBuffer'
  >({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'setTimeBuffer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"settleAuction"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSettleAuction<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2AuctionHouseABI,
          'settleAuction'
        >['abi'],
        'settleAuction'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'settleAuction'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2AuctionHouseABI,
        'settleAuction'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'settleAuction'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof gnarsV2AuctionHouseABI,
    'settleAuction'
  >({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'settleAuction',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"settleCurrentAndCreateNewAuction"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSettleCurrentAndCreateNewAuction<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2AuctionHouseABI,
          'settleCurrentAndCreateNewAuction'
        >['abi'],
        'settleCurrentAndCreateNewAuction'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'settleCurrentAndCreateNewAuction'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2AuctionHouseABI,
        'settleCurrentAndCreateNewAuction'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'settleCurrentAndCreateNewAuction'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof gnarsV2AuctionHouseABI,
    'settleCurrentAndCreateNewAuction'
  >({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'settleCurrentAndCreateNewAuction',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseTransferOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2AuctionHouseABI,
          'transferOwnership'
        >['abi'],
        'transferOwnership'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2AuctionHouseABI,
        'transferOwnership'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof gnarsV2AuctionHouseABI,
    'transferOwnership'
  >({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"unpause"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseUnpause<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2AuctionHouseABI,
          'unpause'
        >['abi'],
        'unpause'
      > & { address?: Address; chainId?: TChainId; functionName?: 'unpause' }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2AuctionHouseABI,
        'unpause'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'unpause'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2AuctionHouseABI, 'unpause'>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'unpause',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"upgradeTo"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseUpgradeTo<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2AuctionHouseABI,
          'upgradeTo'
        >['abi'],
        'upgradeTo'
      > & { address?: Address; chainId?: TChainId; functionName?: 'upgradeTo' }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2AuctionHouseABI,
        'upgradeTo'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'upgradeTo'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2AuctionHouseABI, 'upgradeTo'>({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"upgradeToAndCall"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseUpgradeToAndCall<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2AuctionHouseAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2AuctionHouseABI,
          'upgradeToAndCall'
        >['abi'],
        'upgradeToAndCall'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'upgradeToAndCall'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2AuctionHouseABI,
        'upgradeToAndCall'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'upgradeToAndCall'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof gnarsV2AuctionHouseABI,
    'upgradeToAndCall'
  >({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'upgradeToAndCall',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseWrite<
  TFunctionName extends string,
>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2AuctionHouseABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"claimGnars"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseClaimGnars(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'claimGnars'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'claimGnars',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2AuctionHouseABI,
    'claimGnars'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"createBid"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseCreateBid(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'createBid'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'createBid',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2AuctionHouseABI,
    'createBid'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'initialize'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2AuctionHouseABI,
    'initialize'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"pause"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHousePause(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'pause'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'pause',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'pause'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof gnarsV2AuctionHouseABI,
      'renounceOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2AuctionHouseABI,
    'renounceOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"setMinBidIncrementPercentage"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseSetMinBidIncrementPercentage(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof gnarsV2AuctionHouseABI,
      'setMinBidIncrementPercentage'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'setMinBidIncrementPercentage',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2AuctionHouseABI,
    'setMinBidIncrementPercentage'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"setReservePrice"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseSetReservePrice(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof gnarsV2AuctionHouseABI,
      'setReservePrice'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'setReservePrice',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2AuctionHouseABI,
    'setReservePrice'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"setSkateDaoAddresses"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseSetSkateDaoAddresses(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof gnarsV2AuctionHouseABI,
      'setSkateDaoAddresses'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'setSkateDaoAddresses',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2AuctionHouseABI,
    'setSkateDaoAddresses'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"setTimeBuffer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseSetTimeBuffer(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof gnarsV2AuctionHouseABI,
      'setTimeBuffer'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'setTimeBuffer',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2AuctionHouseABI,
    'setTimeBuffer'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"settleAuction"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseSettleAuction(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof gnarsV2AuctionHouseABI,
      'settleAuction'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'settleAuction',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2AuctionHouseABI,
    'settleAuction'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"settleCurrentAndCreateNewAuction"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseSettleCurrentAndCreateNewAuction(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof gnarsV2AuctionHouseABI,
      'settleCurrentAndCreateNewAuction'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'settleCurrentAndCreateNewAuction',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2AuctionHouseABI,
    'settleCurrentAndCreateNewAuction'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof gnarsV2AuctionHouseABI,
      'transferOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2AuctionHouseABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"unpause"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseUnpause(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'unpause'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'unpause',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'unpause'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"upgradeTo"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2AuctionHouseABI, 'upgradeTo'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2AuctionHouseABI,
    'upgradeTo'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `functionName` set to `"upgradeToAndCall"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function usePrepareGnarsV2AuctionHouseUpgradeToAndCall(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof gnarsV2AuctionHouseABI,
      'upgradeToAndCall'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    functionName: 'upgradeToAndCall',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2AuctionHouseABI,
    'upgradeToAndCall'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"AdminChanged"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAdminChangedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AdminChanged'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'AdminChanged',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AdminChanged'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"AuctionBid"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuctionBidEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionBid'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'AuctionBid',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionBid'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"AuctionCreated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuctionCreatedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionCreated'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'AuctionCreated',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionCreated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"AuctionExtended"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuctionExtendedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionExtended'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'AuctionExtended',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionExtended'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"AuctionMinBidIncrementPercentageUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuctionMinBidIncrementPercentageUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof gnarsV2AuctionHouseABI,
      'AuctionMinBidIncrementPercentageUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'AuctionMinBidIncrementPercentageUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof gnarsV2AuctionHouseABI,
    'AuctionMinBidIncrementPercentageUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"AuctionReservePriceUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuctionReservePriceUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof gnarsV2AuctionHouseABI,
      'AuctionReservePriceUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'AuctionReservePriceUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof gnarsV2AuctionHouseABI,
    'AuctionReservePriceUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"AuctionSettled"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuctionSettledEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionSettled'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'AuctionSettled',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'AuctionSettled'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"AuctionTimeBufferUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseAuctionTimeBufferUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof gnarsV2AuctionHouseABI,
      'AuctionTimeBufferUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'AuctionTimeBufferUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof gnarsV2AuctionHouseABI,
    'AuctionTimeBufferUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"BeaconUpgraded"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseBeaconUpgradedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'BeaconUpgraded'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'BeaconUpgraded',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'BeaconUpgraded'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"OGGnarClaimed"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseOgGnarClaimedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'OGGnarClaimed'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'OGGnarClaimed',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'OGGnarClaimed'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<
      typeof gnarsV2AuctionHouseABI,
      'OwnershipTransferred'
    >,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<
    typeof gnarsV2AuctionHouseABI,
    'OwnershipTransferred'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"Paused"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHousePausedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'Paused'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'Paused',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'Paused'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"SkateDaoAddressesUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseSkateDaoAddressesUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof gnarsV2AuctionHouseABI,
      'SkateDaoAddressesUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'SkateDaoAddressesUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof gnarsV2AuctionHouseABI,
    'SkateDaoAddressesUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"Unpaused"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseUnpausedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'Unpaused'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'Unpaused',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'Unpaused'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2AuctionHouseABI}__ and `eventName` set to `"Upgraded"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xC28e0d3c00296dD8c5C3F2E9707361920f92a209)
 */
export function useGnarsV2AuctionHouseUpgradedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'Upgraded'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2AuctionHouseAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2AuctionHouseABI,
    address: gnarsV2AuctionHouseAddress[1],
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2AuctionHouseABI, 'Upgraded'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link gnarsOgABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOg(
  config: Omit<UseContractConfig, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsOgAddress
  } = {} as any,
) {
  return useContract({ abi: gnarsOgABI, address: gnarsOgAddress[1], ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof gnarsOgABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"auction"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgAuction<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'auction'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'auction', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'auction',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'auction', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"auctionPeriodBlocks"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgAuctionPeriodBlocks<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'auctionPeriodBlocks'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsOgABI,
      'auctionPeriodBlocks',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'auctionPeriodBlocks',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsOgABI,
    'auctionPeriodBlocks',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgBalanceOf<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'balanceOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'balanceOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'balanceOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"currentGnarId"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgCurrentGnarId<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'currentGnarId'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'currentGnarId', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'currentGnarId',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'currentGnarId', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"dao"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgDao<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'dao'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'dao', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'dao',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'dao', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"descriptor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgDescriptor<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'descriptor'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'descriptor', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'descriptor',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'descriptor', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"getApproved"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgGetApproved<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'getApproved'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'getApproved', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'getApproved', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgIsApprovedForAll<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'isApprovedForAll'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'isApprovedForAll', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsOgABI,
    'isApprovedForAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"minBidIncrementPercentage"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgMinBidIncrementPercentage<
  TSelectData = ReadContractResult<
    typeof gnarsOgABI,
    'minBidIncrementPercentage'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsOgABI,
      'minBidIncrementPercentage',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'minBidIncrementPercentage',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsOgABI,
    'minBidIncrementPercentage',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgName<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'name'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'name', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'name', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgOwner<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'owner'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'owner', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'owner', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgOwnerOf<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'ownerOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'ownerOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'ownerOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"paused"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgPaused<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'paused'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'paused', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'paused',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'paused', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"remainBlocks"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgRemainBlocks<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'remainBlocks'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'remainBlocks', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'remainBlocks',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'remainBlocks', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"reservePrice"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgReservePrice<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'reservePrice'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'reservePrice', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'reservePrice',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'reservePrice', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"seeder"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSeeder<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'seeder'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'seeder', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'seeder',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'seeder', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"seeds"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSeeds<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'seeds'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'seeds', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'seeds',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'seeds', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"skate"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSkate<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'skate'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'skate', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'skate',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'skate', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSupportsInterface<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'supportsInterface'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'supportsInterface', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsOgABI,
    'supportsInterface',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSymbol<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'symbol'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'symbol', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'symbol', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"tokenByIndex"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgTokenByIndex<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'tokenByIndex'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'tokenByIndex', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'tokenByIndex',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'tokenByIndex', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"tokenOfOwnerByIndex"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgTokenOfOwnerByIndex<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'tokenOfOwnerByIndex'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsOgABI,
      'tokenOfOwnerByIndex',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'tokenOfOwnerByIndex',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsOgABI,
    'tokenOfOwnerByIndex',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgTokenUri<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'tokenURI'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'tokenURI', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'tokenURI', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"totalSupply"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgTotalSupply<
  TSelectData = ReadContractResult<typeof gnarsOgABI, 'totalSupply'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsOgABI, 'totalSupply', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<typeof gnarsOgABI, 'totalSupply', TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsOgABI, string>['abi'],
        TFunctionName
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<TMode, typeof gnarsOgABI, TFunctionName> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsOgABI, TFunctionName>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgApprove<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsOgABI, 'approve'>['abi'],
        'approve'
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<TMode, typeof gnarsOgABI, 'approve'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsOgABI, 'approve'>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"auctionStart"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgAuctionStart<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsOgABI, 'auctionStart'>['abi'],
        'auctionStart'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'auctionStart'
      }
    : UseContractWriteConfig<TMode, typeof gnarsOgABI, 'auctionStart'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'auctionStart'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsOgABI, 'auctionStart'>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'auctionStart',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"burn"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgBurn<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsOgABI, 'burn'>['abi'],
        'burn'
      > & { address?: Address; chainId?: TChainId; functionName?: 'burn' }
    : UseContractWriteConfig<TMode, typeof gnarsOgABI, 'burn'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsOgABI, 'burn'>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"createBid"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgCreateBid<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsOgABI, 'createBid'>['abi'],
        'createBid'
      > & { address?: Address; chainId?: TChainId; functionName?: 'createBid' }
    : UseContractWriteConfig<TMode, typeof gnarsOgABI, 'createBid'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'createBid'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsOgABI, 'createBid'>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'createBid',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"pause"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgPause<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsOgABI, 'pause'>['abi'],
        'pause'
      > & { address?: Address; chainId?: TChainId; functionName?: 'pause' }
    : UseContractWriteConfig<TMode, typeof gnarsOgABI, 'pause'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'pause'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsOgABI, 'pause'>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'pause',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgRenounceOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsOgABI,
          'renounceOwnership'
        >['abi'],
        'renounceOwnership'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<TMode, typeof gnarsOgABI, 'renounceOwnership'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsOgABI, 'renounceOwnership'>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSafeTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsOgABI,
          'safeTransferFrom'
        >['abi'],
        'safeTransferFrom'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      }
    : UseContractWriteConfig<TMode, typeof gnarsOgABI, 'safeTransferFrom'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsOgABI, 'safeTransferFrom'>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSetApprovalForAll<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsOgABI,
          'setApprovalForAll'
        >['abi'],
        'setApprovalForAll'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      }
    : UseContractWriteConfig<TMode, typeof gnarsOgABI, 'setApprovalForAll'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsOgABI, 'setApprovalForAll'>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setAuctionPeriodBlocks"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSetAuctionPeriodBlocks<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsOgABI,
          'setAuctionPeriodBlocks'
        >['abi'],
        'setAuctionPeriodBlocks'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setAuctionPeriodBlocks'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsOgABI,
        'setAuctionPeriodBlocks'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setAuctionPeriodBlocks'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsOgABI, 'setAuctionPeriodBlocks'>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setAuctionPeriodBlocks',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setDescriptor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSetDescriptor<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsOgABI, 'setDescriptor'>['abi'],
        'setDescriptor'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setDescriptor'
      }
    : UseContractWriteConfig<TMode, typeof gnarsOgABI, 'setDescriptor'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setDescriptor'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsOgABI, 'setDescriptor'>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setDescriptor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setMinBidIncrementPercentage"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSetMinBidIncrementPercentage<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsOgABI,
          'setMinBidIncrementPercentage'
        >['abi'],
        'setMinBidIncrementPercentage'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setMinBidIncrementPercentage'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsOgABI,
        'setMinBidIncrementPercentage'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setMinBidIncrementPercentage'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof gnarsOgABI,
    'setMinBidIncrementPercentage'
  >({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setMinBidIncrementPercentage',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setReservePrice"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSetReservePrice<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsOgABI, 'setReservePrice'>['abi'],
        'setReservePrice'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setReservePrice'
      }
    : UseContractWriteConfig<TMode, typeof gnarsOgABI, 'setReservePrice'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setReservePrice'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsOgABI, 'setReservePrice'>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setReservePrice',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setSeeder"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSetSeeder<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsOgABI, 'setSeeder'>['abi'],
        'setSeeder'
      > & { address?: Address; chainId?: TChainId; functionName?: 'setSeeder' }
    : UseContractWriteConfig<TMode, typeof gnarsOgABI, 'setSeeder'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSeeder'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsOgABI, 'setSeeder'>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setSeeder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setSkateDaoAddresses"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSetSkateDaoAddresses<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsOgABI,
          'setSkateDaoAddresses'
        >['abi'],
        'setSkateDaoAddresses'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setSkateDaoAddresses'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsOgABI,
        'setSkateDaoAddresses'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSkateDaoAddresses'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsOgABI, 'setSkateDaoAddresses'>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setSkateDaoAddresses',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"settleCurrentAndCreateNewAuction"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgSettleCurrentAndCreateNewAuction<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsOgABI,
          'settleCurrentAndCreateNewAuction'
        >['abi'],
        'settleCurrentAndCreateNewAuction'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'settleCurrentAndCreateNewAuction'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsOgABI,
        'settleCurrentAndCreateNewAuction'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'settleCurrentAndCreateNewAuction'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof gnarsOgABI,
    'settleCurrentAndCreateNewAuction'
  >({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'settleCurrentAndCreateNewAuction',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsOgABI, 'transferFrom'>['abi'],
        'transferFrom'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<TMode, typeof gnarsOgABI, 'transferFrom'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsOgABI, 'transferFrom'>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgTransferOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsOgABI,
          'transferOwnership'
        >['abi'],
        'transferOwnership'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<TMode, typeof gnarsOgABI, 'transferOwnership'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsOgABI, 'transferOwnership'>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"unpause"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgUnpause<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsOgAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsOgABI, 'unpause'>['abi'],
        'unpause'
      > & { address?: Address; chainId?: TChainId; functionName?: 'unpause' }
    : UseContractWriteConfig<TMode, typeof gnarsOgABI, 'unpause'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'unpause'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsOgABI, 'unpause'>({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'unpause',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'approve'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"auctionStart"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgAuctionStart(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'auctionStart'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'auctionStart',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'auctionStart'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"burn"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgBurn(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'burn'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'burn'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"createBid"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgCreateBid(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'createBid'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'createBid',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'createBid'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"pause"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgPause(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'pause'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'pause',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'pause'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'renounceOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'renounceOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'safeTransferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'safeTransferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setApprovalForAll'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setApprovalForAll'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setAuctionPeriodBlocks"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSetAuctionPeriodBlocks(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setAuctionPeriodBlocks'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setAuctionPeriodBlocks',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsOgABI,
    'setAuctionPeriodBlocks'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setDescriptor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSetDescriptor(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setDescriptor'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setDescriptor',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setDescriptor'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setMinBidIncrementPercentage"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSetMinBidIncrementPercentage(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof gnarsOgABI,
      'setMinBidIncrementPercentage'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setMinBidIncrementPercentage',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsOgABI,
    'setMinBidIncrementPercentage'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setReservePrice"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSetReservePrice(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setReservePrice'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setReservePrice',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setReservePrice'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setSeeder"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSetSeeder(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setSeeder'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setSeeder',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setSeeder'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"setSkateDaoAddresses"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSetSkateDaoAddresses(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setSkateDaoAddresses'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'setSkateDaoAddresses',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'setSkateDaoAddresses'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"settleCurrentAndCreateNewAuction"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgSettleCurrentAndCreateNewAuction(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof gnarsOgABI,
      'settleCurrentAndCreateNewAuction'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'settleCurrentAndCreateNewAuction',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsOgABI,
    'settleCurrentAndCreateNewAuction'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'transferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'transferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'transferOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsOgABI}__ and `functionName` set to `"unpause"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function usePrepareGnarsOgUnpause(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsOgABI, 'unpause'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    functionName: 'unpause',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsOgABI, 'unpause'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof gnarsOgABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"Approval"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsOgABI, 'Approval'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsOgABI, 'ApprovalForAll'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, 'ApprovalForAll'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"AuctionBid"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgAuctionBidEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsOgABI, 'AuctionBid'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'AuctionBid',
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, 'AuctionBid'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"AuctionCreated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgAuctionCreatedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsOgABI, 'AuctionCreated'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'AuctionCreated',
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, 'AuctionCreated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"AuctionSettled"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgAuctionSettledEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsOgABI, 'AuctionSettled'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'AuctionSettled',
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, 'AuctionSettled'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"MinBidIncrementPercentageUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgMinBidIncrementPercentageUpdatedEvent(
  config: Omit<
    UseContractEventConfig<
      typeof gnarsOgABI,
      'MinBidIncrementPercentageUpdated'
    >,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'MinBidIncrementPercentageUpdated',
    ...config,
  } as UseContractEventConfig<
    typeof gnarsOgABI,
    'MinBidIncrementPercentageUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsOgABI, 'OwnershipTransferred'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"ReservePriceUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgReservePriceUpdatedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsOgABI, 'ReservePriceUpdated'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'ReservePriceUpdated',
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, 'ReservePriceUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsOgABI}__ and `eventName` set to `"Transfer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x494715b2a3c75dadd24929835b658a1c19bd4552)
 */
export function useGnarsOgTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsOgABI, 'Transfer'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsOgAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsOgABI,
    address: gnarsOgAddress[1],
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof gnarsOgABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link gnarsV2TokenABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2Token(
  config: Omit<UseContractConfig, 'abi' | 'address'> & {
    chainId?: keyof typeof gnarsV2TokenAddress
  } = {} as any,
) {
  return useContract({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"DELEGATION_TYPEHASH"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDelegationTypehash<
  TSelectData = ReadContractResult<
    typeof gnarsV2TokenABI,
    'DELEGATION_TYPEHASH'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2TokenABI,
      'DELEGATION_TYPEHASH',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'DELEGATION_TYPEHASH',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'DELEGATION_TYPEHASH',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"DOMAIN_TYPEHASH"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDomainTypehash<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'DOMAIN_TYPEHASH'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2TokenABI,
      'DOMAIN_TYPEHASH',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'DOMAIN_TYPEHASH',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'DOMAIN_TYPEHASH',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenBalanceOf<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'balanceOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'balanceOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, 'balanceOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"checkpoints"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenCheckpoints<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'checkpoints'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'checkpoints', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'checkpoints',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'checkpoints',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"customDescription"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenCustomDescription<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'customDescription'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2TokenABI,
      'customDescription',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'customDescription',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'customDescription',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"decimals"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDecimals<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'decimals'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'decimals', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'decimals',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, 'decimals', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"delegates"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDelegates<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'delegates'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'delegates', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'delegates',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, 'delegates', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"descriptor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDescriptor<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'descriptor'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'descriptor', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'descriptor',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, 'descriptor', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"getApproved"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenGetApproved<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'getApproved'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'getApproved', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'getApproved',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"getCurrentVotes"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenGetCurrentVotes<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'getCurrentVotes'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2TokenABI,
      'getCurrentVotes',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'getCurrentVotes',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'getCurrentVotes',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"getPriorVotes"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenGetPriorVotes<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'getPriorVotes'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'getPriorVotes', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'getPriorVotes',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'getPriorVotes',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"initialGnarId"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenInitialGnarId<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'initialGnarId'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'initialGnarId', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'initialGnarId',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'initialGnarId',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenIsApprovedForAll<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'isApprovedForAll'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2TokenABI,
      'isApprovedForAll',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'isApprovedForAll',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"isDescriptorLocked"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenIsDescriptorLocked<
  TSelectData = ReadContractResult<
    typeof gnarsV2TokenABI,
    'isDescriptorLocked'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2TokenABI,
      'isDescriptorLocked',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'isDescriptorLocked',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'isDescriptorLocked',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"isMinterLocked"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenIsMinterLocked<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'isMinterLocked'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2TokenABI,
      'isMinterLocked',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'isMinterLocked',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'isMinterLocked',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"isSeederLocked"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenIsSeederLocked<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'isSeederLocked'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2TokenABI,
      'isSeederLocked',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'isSeederLocked',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'isSeederLocked',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"minter"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenMinter<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'minter'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'minter', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'minter',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, 'minter', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenName<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'name'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'name', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, 'name', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"nonces"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenNonces<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'nonces'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'nonces', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'nonces',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, 'nonces', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"noundersDAO"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenNoundersDao<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'noundersDAO'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'noundersDAO', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'noundersDAO',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'noundersDAO',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"numCheckpoints"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenNumCheckpoints<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'numCheckpoints'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2TokenABI,
      'numCheckpoints',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'numCheckpoints',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'numCheckpoints',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenOwner<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'owner'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'owner', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, 'owner', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenOwnerOf<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'ownerOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'ownerOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, 'ownerOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"proxyRegistry"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenProxyRegistry<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'proxyRegistry'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'proxyRegistry', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'proxyRegistry',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'proxyRegistry',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"seeder"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSeeder<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'seeder'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'seeder', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'seeder',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, 'seeder', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"seeds"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSeeds<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'seeds'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'seeds', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'seeds',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, 'seeds', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSupportsInterface<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'supportsInterface'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2TokenABI,
      'supportsInterface',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'supportsInterface',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSymbol<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'symbol'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'symbol', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, 'symbol', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"tokenByIndex"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenTokenByIndex<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'tokenByIndex'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'tokenByIndex', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'tokenByIndex',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'tokenByIndex',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"tokenOfOwnerByIndex"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenTokenOfOwnerByIndex<
  TSelectData = ReadContractResult<
    typeof gnarsV2TokenABI,
    'tokenOfOwnerByIndex'
  >,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2TokenABI,
      'tokenOfOwnerByIndex',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'tokenOfOwnerByIndex',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'tokenOfOwnerByIndex',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenTokenUri<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'tokenURI'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'tokenURI', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<typeof gnarsV2TokenABI, 'tokenURI', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"totalSupply"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenTotalSupply<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'totalSupply'>,
>(
  config: Omit<
    UseContractReadConfig<typeof gnarsV2TokenABI, 'totalSupply', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"viewDescription"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenViewDescription<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'viewDescription'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2TokenABI,
      'viewDescription',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'viewDescription',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'viewDescription',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"votesToDelegate"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenVotesToDelegate<
  TSelectData = ReadContractResult<typeof gnarsV2TokenABI, 'votesToDelegate'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof gnarsV2TokenABI,
      'votesToDelegate',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractRead({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'votesToDelegate',
    ...config,
  } as UseContractReadConfig<
    typeof gnarsV2TokenABI,
    'votesToDelegate',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsV2TokenABI, string>['abi'],
        TFunctionName
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<TMode, typeof gnarsV2TokenABI, TFunctionName> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2TokenABI, TFunctionName>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenApprove<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'approve'>['abi'],
        'approve'
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<TMode, typeof gnarsV2TokenABI, 'approve'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2TokenABI, 'approve'>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"burn"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenBurn<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'burn'>['abi'],
        'burn'
      > & { address?: Address; chainId?: TChainId; functionName?: 'burn' }
    : UseContractWriteConfig<TMode, typeof gnarsV2TokenABI, 'burn'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'burn'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2TokenABI, 'burn'>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'burn',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"delegate"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDelegate<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'delegate'>['abi'],
        'delegate'
      > & { address?: Address; chainId?: TChainId; functionName?: 'delegate' }
    : UseContractWriteConfig<TMode, typeof gnarsV2TokenABI, 'delegate'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'delegate'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2TokenABI, 'delegate'>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'delegate',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"delegateBySig"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDelegateBySig<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2TokenABI,
          'delegateBySig'
        >['abi'],
        'delegateBySig'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'delegateBySig'
      }
    : UseContractWriteConfig<TMode, typeof gnarsV2TokenABI, 'delegateBySig'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'delegateBySig'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2TokenABI, 'delegateBySig'>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'delegateBySig',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"lockDescriptor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenLockDescriptor<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2TokenABI,
          'lockDescriptor'
        >['abi'],
        'lockDescriptor'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'lockDescriptor'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2TokenABI,
        'lockDescriptor'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'lockDescriptor'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2TokenABI, 'lockDescriptor'>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'lockDescriptor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"lockMinter"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenLockMinter<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'lockMinter'>['abi'],
        'lockMinter'
      > & { address?: Address; chainId?: TChainId; functionName?: 'lockMinter' }
    : UseContractWriteConfig<TMode, typeof gnarsV2TokenABI, 'lockMinter'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'lockMinter'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2TokenABI, 'lockMinter'>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'lockMinter',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"lockSeeder"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenLockSeeder<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'lockSeeder'>['abi'],
        'lockSeeder'
      > & { address?: Address; chainId?: TChainId; functionName?: 'lockSeeder' }
    : UseContractWriteConfig<TMode, typeof gnarsV2TokenABI, 'lockSeeder'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'lockSeeder'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2TokenABI, 'lockSeeder'>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'lockSeeder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"mint"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenMint<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'mint'>['abi'],
        'mint'
      > & { address?: Address; chainId?: TChainId; functionName?: 'mint' }
    : UseContractWriteConfig<TMode, typeof gnarsV2TokenABI, 'mint'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2TokenABI, 'mint'>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenRenounceOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2TokenABI,
          'renounceOwnership'
        >['abi'],
        'renounceOwnership'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2TokenABI,
        'renounceOwnership'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2TokenABI, 'renounceOwnership'>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSafeTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2TokenABI,
          'safeTransferFrom'
        >['abi'],
        'safeTransferFrom'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2TokenABI,
        'safeTransferFrom'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2TokenABI, 'safeTransferFrom'>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSetApprovalForAll<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2TokenABI,
          'setApprovalForAll'
        >['abi'],
        'setApprovalForAll'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2TokenABI,
        'setApprovalForAll'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2TokenABI, 'setApprovalForAll'>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setCustomDescription"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSetCustomDescription<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2TokenABI,
          'setCustomDescription'
        >['abi'],
        'setCustomDescription'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setCustomDescription'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2TokenABI,
        'setCustomDescription'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setCustomDescription'
      } = {} as any,
) {
  return useContractWrite<
    TMode,
    typeof gnarsV2TokenABI,
    'setCustomDescription'
  >({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'setCustomDescription',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setDescriptor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSetDescriptor<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2TokenABI,
          'setDescriptor'
        >['abi'],
        'setDescriptor'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setDescriptor'
      }
    : UseContractWriteConfig<TMode, typeof gnarsV2TokenABI, 'setDescriptor'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setDescriptor'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2TokenABI, 'setDescriptor'>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'setDescriptor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setMinter"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSetMinter<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'setMinter'>['abi'],
        'setMinter'
      > & { address?: Address; chainId?: TChainId; functionName?: 'setMinter' }
    : UseContractWriteConfig<TMode, typeof gnarsV2TokenABI, 'setMinter'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setMinter'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2TokenABI, 'setMinter'>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'setMinter',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setSeeder"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSetSeeder<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof gnarsV2TokenABI, 'setSeeder'>['abi'],
        'setSeeder'
      > & { address?: Address; chainId?: TChainId; functionName?: 'setSeeder' }
    : UseContractWriteConfig<TMode, typeof gnarsV2TokenABI, 'setSeeder'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSeeder'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2TokenABI, 'setSeeder'>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'setSeeder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2TokenABI,
          'transferFrom'
        >['abi'],
        'transferFrom'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<TMode, typeof gnarsV2TokenABI, 'transferFrom'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2TokenABI, 'transferFrom'>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenTransferOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof gnarsV2TokenAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof gnarsV2TokenABI,
          'transferOwnership'
        >['abi'],
        'transferOwnership'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<
        TMode,
        typeof gnarsV2TokenABI,
        'transferOwnership'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof gnarsV2TokenABI, 'transferOwnership'>({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'approve'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"burn"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenBurn(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'burn'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'burn',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'burn'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"delegate"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenDelegate(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'delegate'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'delegate',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'delegate'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"delegateBySig"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenDelegateBySig(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'delegateBySig'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'delegateBySig',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'delegateBySig'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"lockDescriptor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenLockDescriptor(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'lockDescriptor'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'lockDescriptor',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'lockDescriptor'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"lockMinter"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenLockMinter(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'lockMinter'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'lockMinter',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'lockMinter'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"lockSeeder"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenLockSeeder(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'lockSeeder'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'lockSeeder',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'lockSeeder'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"mint"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'mint'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'mint'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'renounceOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2TokenABI,
    'renounceOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'safeTransferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2TokenABI,
    'safeTransferFrom'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'setApprovalForAll'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2TokenABI,
    'setApprovalForAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setCustomDescription"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenSetCustomDescription(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof gnarsV2TokenABI,
      'setCustomDescription'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'setCustomDescription',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2TokenABI,
    'setCustomDescription'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setDescriptor"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenSetDescriptor(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'setDescriptor'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'setDescriptor',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'setDescriptor'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setMinter"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenSetMinter(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'setMinter'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'setMinter',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'setMinter'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"setSeeder"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenSetSeeder(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'setSeeder'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'setSeeder',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'setSeeder'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'transferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'transferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function usePrepareGnarsV2TokenTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gnarsV2TokenABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof gnarsV2TokenABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2TokenABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"Approval"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2TokenABI, 'Approval'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2TokenABI, 'ApprovalForAll'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'ApprovalForAll'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"DelegateChanged"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDelegateChangedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2TokenABI, 'DelegateChanged'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    eventName: 'DelegateChanged',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'DelegateChanged'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"DelegateVotesChanged"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDelegateVotesChangedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2TokenABI, 'DelegateVotesChanged'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    eventName: 'DelegateVotesChanged',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'DelegateVotesChanged'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"DescriptorLocked"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDescriptorLockedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2TokenABI, 'DescriptorLocked'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    eventName: 'DescriptorLocked',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'DescriptorLocked'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"DescriptorUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenDescriptorUpdatedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2TokenABI, 'DescriptorUpdated'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    eventName: 'DescriptorUpdated',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'DescriptorUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"GnarBurned"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenGnarBurnedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2TokenABI, 'GnarBurned'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    eventName: 'GnarBurned',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'GnarBurned'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"GnarCreated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenGnarCreatedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2TokenABI, 'GnarCreated'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    eventName: 'GnarCreated',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'GnarCreated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"MinterLocked"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenMinterLockedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2TokenABI, 'MinterLocked'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    eventName: 'MinterLocked',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'MinterLocked'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"MinterUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenMinterUpdatedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2TokenABI, 'MinterUpdated'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    eventName: 'MinterUpdated',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'MinterUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2TokenABI, 'OwnershipTransferred'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"SeederLocked"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSeederLockedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2TokenABI, 'SeederLocked'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    eventName: 'SeederLocked',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'SeederLocked'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"SeederUpdated"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenSeederUpdatedEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2TokenABI, 'SeederUpdated'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    eventName: 'SeederUpdated',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'SeederUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gnarsV2TokenABI}__ and `eventName` set to `"Transfer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x558BFFF0D583416f7C4e380625c7865821b8E95C)
 */
export function useGnarsV2TokenTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof gnarsV2TokenABI, 'Transfer'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gnarsV2TokenAddress } = {} as any,
) {
  return useContractEvent({
    abi: gnarsV2TokenABI,
    address: gnarsV2TokenAddress[1],
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof gnarsV2TokenABI, 'Transfer'>)
}
